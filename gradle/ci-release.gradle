// CI done via ./github/workflows/tag-version.yml.

// Task to fail fast and clearly if required properties are not set.
task verifyBintrayProperties {
  doFirst {
    if (System.getenv('BINTRAY_USER') == null) {
      throw new Exception("Environment variable BINTRAY_USER not set.");
    }
    if (System.getenv('BINTRAY_KEY') == null) {
      throw new Exception("Environment variable BINTRAY_USER not set.");
    }
  }
}

task bintrayUploadAll {
  description = "Runs 'bintrayUpload' tasks from all projects"
  mustRunAfter "gitPush" //git push is easier to rollback so we run it first
}

allprojects {
  tasks.matching { it.name == "bintrayUpload" }.all {
    it.dependsOn verifyBintrayProperties
    bintrayUploadAll.dependsOn it
  }
}

task ciPerformRelease {
  description = "Performs the release, intended to be ran on CI"
  dependsOn "gitTag", "gitPush", "bintrayUploadAll"
}

task getTag(type: Exec) {
  commandLine "/bin/bash", "-c", "git tag --points-at HEAD"
  standardOutput = new ByteArrayOutputStream()
  ext.output = {
    return standardOutput.toString()
  }
}

task gitTag {
  description = "Creates annotated tag 'v$version'"
  dependsOn getTag

  doLast {
    if (!getTag.output().isEmpty()) {
      throw new Exception("Cannot tag commit with existing tags: " + getTag.output())
    }
    println "Creating tag v$version"
    exec { commandLine "git", "tag", "-a", "-m", "Release $version", "v$version" }
    println "Created tag v$version"
  }
}

task gitPush(type: Exec) {
  description = "Pushes tags by running 'git push --tags'. Hides secret key from git push output."
  mustRunAfter "gitTag" //tag first, push later

  doFirst {
    if (System.getenv('GIT_SECRET') == null) {
      println 'Need the GIT_SECRET environment variable to be set in order to push branches!'
    }
  }
  doFirst { println "Pushing tags" }
  commandLine "./gradle/git-push.sh"
  doLast { println "Pushed tags" }
}
